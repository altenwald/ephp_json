@author "Manuel Rubio" <manuel@altenwald.com>
@copyright 2017 Altenwald Solutions, S.L.
@title ePHP JSON

@doc
<a href="https://travis-ci.org/altenwald/ephp_json"><img src="https://img.shields.io/travis/altenwald/ephp_json/master.svg" alt="Build Status"/></a>
<a href='https://codecov.io/gh/altenwald/ephp_json'><img src='https://img.shields.io/codecov/c/github/altenwald/ephp_json.svg' alt='Codecov' /></a>
<a href='https://raw.githubusercontent.com/altenwald/ephp_json/master/COPYING'><img src='https://img.shields.io/github/license/altenwald/ephp_json.svg' alt='License: LGPL 2.1'/></a>

This library implements the JSON functions as is in PHP code for <a href='https://github.com/altenwald/ephp'>ephp</a> keeping in mind to have it as pure 100% Erlang.

== Requirements ==

ePHP JSON requires to be run over an Erlang/OTP +R16, but not all the versions are full compatible or recommended. See the list:

| Erlang Version | Support | Notes |
|:---|:---:|:---|
| 20.0 | :heavy_check_mark: | Recommended if you use OTP 20 |
| 19.3 | :heavy_check_mark: | Recommended if you use OTP 19 |
| 19.2 | :heavy_check_mark: | |
| 19.1 | :heavy_check_mark: | |
| 19.0 | :heavy_check_mark: | |
| 18.3 | :heavy_check_mark: | Recommended if you use OTP 18 |
| 18.2.1 | :heavy_check_mark: | |
| 18.2 | :heavy_check_mark: | |
| 18.1 | :heavy_check_mark: | |
| 18.0 | :heavy_check_mark: | |
| 17.5 | :heavy_check_mark: | Recommended if you use OTP 17 |
| 17.4 | :heavy_check_mark: | |
| 17.3 | :x: | fail in SSL |
| 17.2 | :x: | no tests available in Travis-CI |
| 17.1 | :heavy_check_mark: | |
| 17.0 | :heavy_check_mark: | |
| R16B03-1 | :heavy_check_mark: | Recommended if you use OTP R16 |
| R16B03 | :heavy_check_mark: | |
| R16B02 | :heavy_check_mark: | |
| R16B01 | :x: | fails in math lib |

== Getting Started ==

A simple way to use, is include in your project <code>rebar.config</code> the following dependency line:

<pre lang="erlang">    {ephp, ".*", {git, "git://github.com/altenwald/ephp_json.git", master}}</pre>

And use the following code in your project:

<pre lang="erlang">{ok, Ctx} = ephp:context_new(),
ephp:register_module(Ctx, ephp_lib_json),
PHP = "Empty array output as array: &lt;?=json_encode('tada')?>",
{ok, Text} = ephp:eval(Ctx, PHP).</pre>

The result stored in <code>Text</code> should be:

<pre>Empty array output as array: "tada"</pre>

Enjoy!

